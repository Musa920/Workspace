

var javascript高级_day02 = {
	"随机方块案例" : [
		 		   " 1.0 创建工具对象 ",
		 		   		" 封装一个获取某个数值区间的随机数方法",
		 		   " 2.0 创建方块对象 ",
		 		   		" 属性放在构造函数里面, 方法放在原型里面",
		 		   		" 构造函数就是声明属性, 存储实例传进来的参数 ",
		 		   		" 不用变量的原因是因为局部变量其他函数访问不到 ",
		 		   		" 创建一个div追加到页面中 ",
		 		   		" 执行初始化功能 ",
		 		   " 3.0 原型方法中的初始化方法 ",
		 		   		" 获取构造函数中接收的数据, 通过this的属性获取",
		 		   		" 把数据逐个赋值给盒子的行内样式",
		 		   " 4.0 生成多个盒子 ",
		 		   		" 通过遍历, 生成随机的三个数值 ",
		 		   		" 每一次遍历都会增加一个实例到盒子中, 然后传输数据改变背景颜色 ",
		 		   		" 将该对象放入一个空数组中 ",
		 		   " 5.0 随机改变位置 ",
		 		   		" 通过实例数组遍历 "
		 		   		" 封装一个函数, 拿到x, y的随机数 ",
		 		   		" (大盒子的宽/高 / 小方块的宽/高 - 1) * 宽/高",
		 		   		" 依次设置每一个盒子的位置 ",
		 		   		" 在外部调用一次 ",
		 		   		" 通过定时器500毫秒执行一次 "
					],
	"贪吃蛇案例" : [
				   "通过设计小游戏能感知js执行的整体流程",
		 		   		"建议不要用DOM去做游戏当做研究方向, 用canvas还差不多",
		 		   "1.0 创建食物对象",
		 		   		" 构造函数中, 接收数据, 声明this的属性存储数据",
		 		   		" 如果没有传参, 就使用默认数据",
		 		   		" 获取随机数的函数, 后面给top和left赋值",
		 		   		" 原型对象中, 设置初始化方法, 创建div标签追加到页面中",
		 		   		" 通过this的属性获取值逐一给该盒子添加样式",
		 		   		" 将新创造的盒子追加到elements数组中",
		 		   "2.0 删除食物",
		 		   		" 封装一个remove函数, 通过element数组遍历",
		 		   		" 倒着遍历, 或者正着遍历, 内部要减减 ",
		 		   		" elements.splice(i, 1); ",
		 		   "3.0 测试 -- 获取map盒子",
		 		   		" 通过new关键字创建一个新的对象",
		 		   		" 调用render方法, 传入map函数",
		 		   "4.0 封印构造函数和其他函数以及变量",
		 		   		" 使用自调用函数, 也就是匿名函数",
		 		   			" js解析器对于不完整的函数代码会不识别",
		 		   			" +/-/!/~/ delete/typeof/new 1,/1+/1~",
		 		   		" 将构造函数暴露给window"
					] 
}